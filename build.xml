<project name="SailPointBaseBuild" default="full-deploy" basedir=".">

    <!-- Load build properties -->
    <property file="build.properties" />

    <!-- Define default paths -->
    <property name="base.war.dir" value="identityiq-war-base" />
    <property name="config.dir" value="identityiq-config" />
    <property name="build.dir" value="identityiq-build" />
    <property name="war.temp.dir" value="${build.dir}/war-temp" />
    <property name="classes.dir" value="${build.dir}/classes" />
    <property name="dist.dir" value="${build.dir}/dist" />
    <property name="source.dir" value="identityiq-source/src" />
    <property name="tomcat.webapps.dir" value="/opt/sailpoint/tomcat/webapps" />

    <!-- Clean old build files -->
    <target name="clean">
        <echo message="Cleaning previous build directories..." />
        <delete dir="${war.temp.dir}" />
        <delete dir="${dist.dir}" />
        <mkdir dir="${war.temp.dir}" />
        <mkdir dir="${dist.dir}" />
    </target>

    <!-- Copy exploded WAR into war-temp -->
    <target name="copy-base-war" depends="clean">
        <echo message="Copying base WAR contents..." />
        <copy todir="${war.temp.dir}">
            <fileset dir="${base.war.dir}" />
        </copy>
    </target>

    <!-- Overlay configuration files -->
    <target name="overlay-config" depends="copy-base-war">
        <echo message="Overlaying configuration files..." />
        <copy todir="${war.temp.dir}/WEB-INF/config">
            <fileset dir="${config.dir}/applications" excludes="Deployed/**" />
            <fileset dir="${config.dir}/rules" excludes="Deployed/**" />
            <fileset dir="${config.dir}/roles" excludes="Deployed/**" />
            <fileset dir="${config.dir}/workflows" excludes="Deployed/**" />
        </copy>
    </target>

    <!-- Build the WAR file -->
    <target name="build-war" depends="overlay-config">
        <echo message="Building new WAR file..." />
        <war destfile="${dist.dir}/identityiq.war" webxml="${war.temp.dir}/WEB-INF/web.xml">
            <fileset dir="${war.temp.dir}" />
        </war>
        <echo message="WAR build complete: ${dist.dir}/identityiq.war" />
    </target>

    <!-- Stop Tomcat -->
    <target name="stop-tomcat">
        <echo message="Stopping Tomcat..." />
        <exec executable="/opt/sailpoint/tomcat/bin/shutdown.sh" failonerror="false" />
    </target>

    <!-- Clean old deployment from Tomcat -->
    <target name="clean-tomcat">
        <echo message="Removing old deployment from Tomcat webapps..." />
        <delete file="${tomcat.webapps.dir}/identityiq.war" failonerror="false"/>
        <delete dir="${tomcat.webapps.dir}/identityiq" failonerror="false"/>
    </target>

    <!-- Deploy WAR to Tomcat -->
    <target name="deploy-war" depends="build-war, clean-tomcat">
        <echo message="Deploying new WAR to Tomcat..." />
        <copy file="${dist.dir}/identityiq.war"
              tofile="${tomcat.webapps.dir}/identityiq.war" />
    </target>

    <!-- Start Tomcat -->
    <target name="start-tomcat">
        <echo message="Starting Tomcat..." />
        <exec executable="/opt/sailpoint/tomcat/bin/startup.sh" />
    </target>

    <!-- Wait for Tomcat to be ready -->
    <target name="wait-for-tomcat" depends="start-tomcat">
        <echo message="Waiting for IdentityIQ to become available..." />
        <exec executable="bash">
            <arg value="-c"/>
            <arg value='echo "Checking IdentityIQ readiness..."; for i in {1..30}; do if [ -f "${tomcat.webapps.dir}/identityiq/WEB-INF/bin/iiq" ]; then chmod +x "${tomcat.webapps.dir}/identityiq/WEB-INF/bin/iiq"; curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/identityiq/login.jsf | grep -q "200" &amp;&amp; echo "✅ IdentityIQ is up!" &amp;&amp; exit 0; fi; echo "Waiting... ($i)"; sleep 5; done; echo "❌ Timeout: IdentityIQ didn’t start within expected time."; exit 1;' />
        </exec>
    </target>

    <!-- Import IIQ config files and copy them after import with timestamp -->
    <target name="import-config">
        <echo message="Importing configuration files into IdentityIQ and copying to Deployed with timestamp..." />

        <exec executable="bash">
            <arg value="-c"/>
            <arg value='
            TIMESTAMP=$(date +"%Y%m%d_%H%M%S");
            TMPFILE=$(mktemp);

            for TYPE in applications rules roles workflows; do
                SRC_DIR="${PWD}/${config.dir}/$TYPE";
                DEST_DIR="${PWD}/${config.dir}/Deployed/$TYPE";
                mkdir -p "$DEST_DIR";

                for FILE in "$SRC_DIR"/*.xml; do
                    [ -f "$FILE" ] || continue;
                    echo "import $FILE" >> $TMPFILE;
                    BASENAME=$(basename "$FILE" .xml);
                    cp "$FILE" "$DEST_DIR/${BASENAME}_${TIMESTAMP}.xml";
                done;
            done;

            cat $TMPFILE | ${tomcat.webapps.dir}/identityiq/WEB-INF/bin/iiq console;
            rm -f $TMPFILE;
            '/>
        </exec>
    </target>

    <!-- Full deploy: stop tomcat, build + deploy, start, wait, import -->
    <target name="full-deploy" depends="stop-tomcat, deploy-war, wait-for-tomcat, import-config">
        <echo message="✅ Full deployment and configuration import completed." />
    </target>

</project>

